---
title: "Assignment 2: Spatial Analysis and Visualization"
subtitle: "Healthcare Access and Equity in Pennsylvania"
author: "Zicheng Xiang"
date: "today"
format:
  html:
    code-fold: true
    toc: true
    toc-location: left
    theme: cosmo
    embed-resources: true
execute:
  warning: false
  message: false
---

---

## Part 1: Healthcare Access for Vulnerable Populations

#### Step 1: Data Collection (5 points)

Load the required spatial data:
- Pennsylvania county boundaries
- Pennsylvania hospitals (from lecture data)
- Pennsylvania census tracts

**Your Task:**
```{r}
#| echo: true
# --- Create SF layers (avoid name clash with the tigris::counties() function) ---
counties <- tigris::counties(state = state_abbr, cb = TRUE, year = 2022) |> 
  sf::st_as_sf() |> sf::st_transform(5070)

tracts <- tigris::tracts(state = state_abbr, year = 2022, cb = TRUE) |> 
  sf::st_as_sf() |> sf::st_transform(5070)

# ---- define BEFORE any use ----
state_abbr <- "PA"
state_name <- "Pennsylvania"
year_acs   <- 2022
survey     <- "acs5"

# Load required packages
required_pkgs <- c(
  "tidyverse","sf","tigris","tidycensus","units","nngeo",
  "ggplot2","scales","janitor","glue","patchwork","osmdata"
)
for (p in required_pkgs) {
  if (!requireNamespace(p, quietly = TRUE)) install.packages(p)
  library(p, character.only = TRUE)
}
options(tigris_use_cache = TRUE, tigris_class = "sf")


# Load spatial data
state_abbr <- "PA"
state_name <- "Pennsylvania"
 # Use ACS 5-year for small-area reliability
year_acs <- 2022
survey  <- "acs5"
 # If your CENSUS_API_KEY is not installed, uncomment and add your key:
tidycensus::census_api_key("547c6d8007c794850c2b25b34f1ce85befe8ab09", install = TRUE, overwrite = TRUE)

# Check that all data loaded correctly
 # Check packages loaded correctly
cat("Loaded packages:\n")
print(search())

 # Check tigris and tidycensus configuration
cat("\nTigris options:\n")
print(options()$tigris_use_cache)
print(options()$tigris_class)

cat("\nCensus API Key successfully installed:\n")
Sys.getenv("CENSUS_API_KEY")

 # Quick test: get county boundaries for Pennsylvania
cat("\nDownloading PA counties to check connection...\n")
pa_counties <- tigris::counties(state = state_abbr, cb = TRUE, year = 2022)

 # Quick check of the object
cat("\nPA counties loaded correctly? ->\n")
print(pa_counties %>% sf::st_geometry_type() %>% table())

 # Quick visualization to confirm spatial data
plot(sf::st_geometry(pa_counties), main = "Pennsylvania Counties (Check)")

#pa_bbox <- st_transform(counties, 4326) %>% st_bbox()
pa_bbox <- sf::st_transform(pa_counties, 4326) |> sf::st_bbox()


q <- opq(bbox = c(pa_bbox["xmin"], pa_bbox["ymin"], pa_bbox["xmax"], pa_bbox["ymax"])) %>%
  add_osm_feature(key = "amenity", value = "hospital")

osm_h <- osmdata_sf(q)

hospitals <- osm_h$osm_points %>%
  st_transform(5070) %>%
  st_intersection(st_union(counties)) %>%
  mutate(name = coalesce(name, "Unknown hospital")) %>%
  distinct(geometry, .keep_all = TRUE)

glue("Hospitals found (points): {nrow(hospitals)}")

# ---- Step 1 answers ----
# Hospitals count
n_hosp <- nrow(hospitals)

# Tracts count
n_tracts <- nrow(tracts)

# CRS report
crs_counties <- st_crs(counties)$input
crs_tracts   <- st_crs(tracts)$input
crs_hosp     <- st_crs(hospitals)$input

glue::glue("
Step 1 — Answers
- Hospitals in dataset: {n_hosp}
- Census tracts: {n_tracts}
- CRS (counties): {crs_counties}
- CRS (tracts):   {crs_tracts}
- CRS (hospitals): {crs_hosp}
")

```

**Questions to answer:**
- How many hospitals are in your dataset?5644
- How many census tracts?3445
- What coordinate reference system is each dataset in? CRS (counties): EPSG:5070;CRS (tracts): EPSG:5070;CRS (hospitals): EPSG:5070

---

#### Step 2: Get Demographic Data 

Use `tidycensus` to download tract-level demographic data for Pennsylvania.

**Required variables:**
- Total population
- Median household income
- Population 65 years and over (you may need to sum multiple age categories)

**Your Task:**
```{r}
# Get demographic data from ACS
vars <- c(
  median_income = "B19013_001",
  pop_total     = "B01003_001",
  # 65+
  male_65_66    = "B01001_020",
  male_67_69    = "B01001_021",
  female_65_66  = "B01001_044",
  female_67_69  = "B01001_045",
  # poverty
  pov_universe  = "B17001_001",
  pov_below     = "B17001_002",
  # no vehicle (owner & renter occupied HHs)
  nov_owner     = "B25044_003",
  nov_renter    = "B25044_010"
)

# 
tract_acs <- get_acs(
  geography = "tract",
  state = state_abbr,
  variables = vars,
  year = year_acs,
  survey = survey,
  geometry = FALSE,
  cache_table = TRUE,
  output = "wide"
)



# Join to tract boundaries
# 
tract_attr <- tract_acs %>%
  dplyr::transmute(
    GEOID,
    median_income = median_incomeE,
    pop_total     = pop_totalE,
    age65         = male_65_66E + male_67_69E + female_65_66E + female_67_69E,
    pov_rate      = ifelse(pov_universeE > 0, pov_belowE / pov_universeE, NA_real_),
    nov_hh        = nov_ownerE + nov_renterE
  )

# 
tracts_attr <- tracts %>%
  dplyr::left_join(tract_attr, by = "GEOID")

# ---- Step 2 answers ----
sum(is.na(tracts_attr$median_income))
median(tracts_attr$median_income, na.rm = TRUE)


```

**Questions to answer:**
- What year of ACS data are you using? 2022 (5-Year Estimates)
- How many tracts have missing income data?62
- What is the median income across all PA census tracts?70188

---

#### Step 3: Define Vulnerable Populations 

Identify census tracts with vulnerable populations based on TWO criteria:
1. Low median household income (choose an appropriate threshold)
2. Significant elderly population (choose an appropriate threshold)

**Your Task:**
```{r}
# Filter for vulnerable tracts based on your criteria
tracts_attr <- tracts_attr %>%
  mutate(
    share65       = ifelse(pop_total > 0, age65 / pop_total, NA_real_),
    nov_percapita = ifelse(pop_total > 0, nov_hh / pop_total, NA_real_),
    inc_rev       = -median_income,             # reverse: lower income => higher vulnerability
    z_income      = scale(inc_rev)[,1],
    z_poverty     = scale(pov_rate)[,1],
    z_65          = scale(share65)[,1],
    z_noveh       = scale(nov_percapita)[,1],
    vuln_index    = rowMeans(cbind(z_income, z_poverty, z_65, z_noveh), na.rm = TRUE)
  )

sum(tracts_attr$median_income < 70000 & tracts_attr$share65 > 0.20, na.rm = TRUE)



```

**Questions to answer:**
- What income threshold did you choose and why? I defined “low income” as census tracts with median household income below the state median for Pennsylvania.
According to the 2022 ACS 5-year data, Pennsylvania’s median household income is around $70,000.
Tracts with median_income < $70,000 are therefore considered economically vulnerable.
This threshold aligns with the state-wide benchmark and is commonly used in equity analyses to identify below-median income areas.
- What elderly population threshold did you choose and why? I defined “significant elderly population” as tracts where the share of residents aged 65 and older exceeds 20% of the total population.
The statewide average share of population aged 65+ is about 18% (ACS 2022), so a 20% cutoff identifies areas with noticeably higher-than-average elderly concentration.
This threshold captures tracts where aging demographics may increase healthcare access challenges.
- How many tracts meet your vulnerability criteria? Based on these two criteria (median_income < 70000 and share65 > 0.20), about 620 tracts across Pennsylvania meet both thresholds.
- What percentage of PA census tracts are considered vulnerable by your definition?About 18% of tracts are considered vulnerable under the combined low-income and elderly criteria.

---

#### Step 4: Calculate Distance to Hospitals 

For each vulnerable tract, calculate the distance to the nearest hospital.

**Your Task:**
```{r}
# Transform to appropriate projected CRS

pa_bbox <- st_transform(counties, 4326) %>% st_bbox()

q <- opq(bbox = c(pa_bbox["xmin"], pa_bbox["ymin"], pa_bbox["xmax"], pa_bbox["ymax"])) %>%
  add_osm_feature(key = "amenity", value = "hospital")

osm_h <- osmdata_sf(q)

hospitals <- osm_h$osm_points %>%
  st_transform(5070) %>%
  st_intersection(st_union(counties)) %>%
  mutate(name = coalesce(name, "Unknown hospital")) %>%
  distinct(geometry, .keep_all = TRUE)

glue("Hospitals found (points): {nrow(hospitals)}")

# Calculate distance from each tract centroid to nearest hospital
# Centroids (use within for compact tracts; for complex shapes you may consider population-weighted centroids)
tract_cent <- st_point_on_surface(tracts_attr)

# Nearest neighbor (index + distance)
nn <- nngeo::st_nn(tract_cent, hospitals, k = 1, returnDist = TRUE)

# Distances are in meters because EPSG:5070 is projected in meters
dist_m <- sapply(nn$dist, function(x) ifelse(length(x)==0, NA_real_, x[1]))

tracts_attr <- tracts_attr %>%
  mutate(
    dist_hosp_m = dist_m,
    dist_hosp_km = set_units(dist_hosp_m, "m") %>% set_units("km") %>% drop_units()
  )
summary(tracts_attr$dist_hosp_km)

sum(tracts_attr$dist_hosp_km > 24.1, na.rm = TRUE)

```

**Requirements:**
- Use an appropriate projected coordinate system for Pennsylvania
- Calculate distances in miles
- Explain why you chose your projection

**Questions to answer:**
- What is the average distance to the nearest hospital for vulnerable tracts? 5.927666
- What is the maximum distance? 51.890854
- How many vulnerable tracts are more than 15 miles from the nearest hospital? 69

---

#### Step 5: Identify Underserved Areas 

Define "underserved" as vulnerable tracts that are more than 15 miles from the nearest hospital.

**Your Task:**
```{r}
# Create underserved variable

# --- thresholds (data-driven; adjust if you prefer fixed cutoffs) ---
income_threshold   <- quantile(tracts_attr$median_income, 0.25, na.rm = TRUE)  # bottom 25% income
elderly_threshold  <- quantile(tracts_attr$share65,       0.75, na.rm = TRUE)  # top 25% 65+ share
fifteen_miles_km   <- units::set_units(15, "mi") |> units::set_units("km") |> units::drop_units()

# --- flags: vulnerable & underserved ---
tracts_attr <- tracts_attr %>%
  mutate(
    vulnerable  = (median_income < income_threshold) & (share65 > elderly_threshold),
    underserved = vulnerable & (dist_hosp_km > fifteen_miles_km)
  )

# (optional) quick summary
glue::glue("
Vulnerable tracts: {sum(tracts_attr$vulnerable,  na.rm = TRUE)}
Underserved tracts (>15 miles): {sum(tracts_attr$underserved, na.rm = TRUE)}
Share underserved: {round(100 * mean(tracts_attr$underserved, na.rm = TRUE), 1)}%
") |> print()


```

**Questions to answer:**
- How many tracts are underserved? 7
- What percentage of vulnerable tracts are underserved? 0.2%
- Does this surprise you? Why or why not?I’m not surprised, because vulnerable populations in Pennsylvania are concentrated in rural areas where healthcare facilities are sparse and travel distances are naturally longer.

---

#### Step 6: Aggregate to County Level

Use spatial joins and aggregation to calculate county-level statistics about vulnerable populations and hospital access.

**Your Task:**
```{r}
# Spatial join tracts to counties
safe_wmean <- function(x, w) {
  x <- as.numeric(x)
  w <- as.numeric(w)
  idx <- is.finite(x) & is.finite(w) & w > 0
  if (!any(idx)) return(NA_real_)
  stats::weighted.mean(x[idx], w[idx])
}

# CRS
counties <- sf::st_transform(counties, sf::st_crs(tracts_attr))

# county_name
cnty_keep <- counties %>%
  dplyr::select(COUNTYFP, county_name = NAME)

# tract ∈ county
tracts_in_cnty <- sf::st_join(
  tracts_attr,
  cnty_keep,
  join = sf::st_within,
  left = TRUE
)

# numeric
tracts_in_cnty_num <- tracts_in_cnty %>%
  dplyr::mutate(
    pop_total     = as.numeric(pop_total),
    median_income = as.numeric(median_income),
    pov_rate      = as.numeric(pov_rate),
    share65       = as.numeric(share65),
    nov_percapita = as.numeric(nov_percapita),
    vuln_index    = as.numeric(vuln_index),
    dist_hosp_km  = as.numeric(dist_hosp_km)
  )

# Aggregate statistics by county
safe_wmean <- function(x, w) {
  x <- as.numeric(x); w <- as.numeric(w)
  idx <- is.finite(x) & is.finite(w) & w > 0
  if (!any(idx)) return(NA_real_)
  stats::weighted.mean(x[idx], w[idx])
}

county_stats <- tracts_in_cnty_num %>%
  sf::st_drop_geometry() %>%
  dplyr::group_by(county_name) %>%
  dplyr::summarise(
    n_tracts          = dplyr::n(),

    median_income_wt  = safe_wmean(.data$median_income, .data$pop_total),
    pov_rate_wt       = safe_wmean(.data$pov_rate,      .data$pop_total),
    share65_wt        = safe_wmean(.data$share65,       .data$pop_total),
    nov_percapita_wt  = safe_wmean(.data$nov_percapita, .data$pop_total),
    vuln_index_wt     = safe_wmean(.data$vuln_index,    .data$pop_total),

    pop_total_sum     = sum(.data$pop_total, na.rm = TRUE),

    min_dist_hosp_km  = suppressWarnings(min(.data$dist_hosp_km, na.rm = TRUE)),
    .groups = "drop"
  )

# 
county_map <- counties %>%
  dplyr::left_join(county_stats, by = c("NAME" = "county_name"))

# ---- Step 6 answers ----
# 1️⃣ 计算每个县的脆弱与欠服务 tract 占比
county_underserved <- tracts_in_cnty_num %>%
  sf::st_drop_geometry() %>%
  group_by(county_name) %>%
  summarise(
    n_tracts = n(),
    n_vulnerable = sum(vulnerable, na.rm = TRUE),
    n_underserved = sum(underserved, na.rm = TRUE),
    pct_underserved = 100 * n_underserved / n_tracts,
    vulnerable_pop_far = sum(pop_total[vulnerable & dist_hosp_km > 24.14], na.rm = TRUE) # >15 miles
  ) %>%
  arrange(desc(pct_underserved))

# 2️⃣ Top 5 counties by % underserved vulnerable tracts
top5_pct <- county_underserved %>%
  arrange(desc(pct_underserved)) %>%
  slice_head(n = 5) %>%
  select(County = county_name,
         `Underserved Tracts (%)` = pct_underserved,
         `Vulnerable Tracts` = n_vulnerable,
         `Underserved Tracts` = n_underserved)

# 3️⃣ Top 5 counties by total vulnerable people far from hospitals
top5_pop <- county_underserved %>%
  arrange(desc(vulnerable_pop_far)) %>%
  slice_head(n = 5) %>%
  select(County = county_name,
         `Vulnerable Pop >15mi` = vulnerable_pop_far,
         `Underserved Tracts` = n_underserved,
         `Pct Underserved (%)` = pct_underserved)

# 4️⃣ 打印结果表格
glue::glue("Top 5 counties by percentage of underserved vulnerable tracts:") |> print()
top5_pct %>% knitr::kable(digits = 1, caption = "Counties with Highest % of Underserved Vulnerable Tracts")

glue::glue("Top 5 counties by total vulnerable people living >15 miles from hospitals:") |> print()
top5_pop %>% knitr::kable(digits = 0, caption = "Counties with Most Vulnerable People Far from Hospitals")

```

**Required county-level statistics:**
- Number of vulnerable tracts
- Number of underserved tracts  
- Percentage of vulnerable tracts that are underserved
- Average distance to nearest hospital for vulnerable tracts
- Total vulnerable population

**Questions to answer:**
- Which 5 counties have the highest percentage of underserved vulnerable tracts?Forest,Sullivan,Juniata,Potter,Wayne
- Which counties have the most vulnerable people living far from hospitals?Dauphin
- Are there any patterns in where underserved counties are located? No, this pattern is not surprising.
The underserved counties are predominantly located in northern and central Pennsylvania, which are mountainous, sparsely populated, and rural.

---

#### Step 7: Create Summary Table 

Create a professional table showing the top 10 priority counties for healthcare investment.

**Your Task:**
```{r}
# Create and format priority counties table
# --- county-level vulnerable metrics (meets the "Required county-level statistics") ---
county_vuln_metrics <- tracts_in_cnty_num %>%
  sf::st_drop_geometry() %>%
  dplyr::group_by(county_name) %>%
  dplyr::summarise(
    vuln_tracts            = sum(vulnerable, na.rm = TRUE),
    underserved_tracts     = sum(underserved, na.rm = TRUE),
    pct_underserved_vuln   = dplyr::if_else(vuln_tracts > 0,
                                            100 * underserved_tracts / vuln_tracts,
                                            NA_real_),
    vuln_pop_total         = sum(pop_total[vulnerable], na.rm = TRUE),
    vuln_pop_far           = sum(pop_total[vulnerable & dist_hosp_km > 24.14], na.rm = TRUE), # >15 mi
    avg_dist_vuln_km       = mean(dist_hosp_km[vulnerable], na.rm = TRUE),
    .groups = "drop"
  )

# --- join with existing county-level stats to get county population & min distance ---
county_vuln_metrics <- county_vuln_metrics %>%
  dplyr::left_join(
    county_stats %>%
      dplyr::select(county_name, pop_total_sum, min_dist_hosp_km),
    by = "county_name"
  )

# --- priority score (you can tweak weights if needed) ---
# Higher % underserved (among vulnerable), more vulnerable pop far from hospitals, and longer avg distance => higher priority
county_priority <- county_vuln_metrics %>%
  dplyr::mutate(
    # Normalize components to [0,1] for a composite index
    z_pct    = scales::rescale(pct_underserved_vuln, to = c(0, 1), from = range(pct_underserved_vuln, na.rm = TRUE)),
    z_popfar = scales::rescale(vuln_pop_far,        to = c(0, 1), from = range(vuln_pop_far,        na.rm = TRUE)),
    z_dist   = scales::rescale(avg_dist_vuln_km,    to = c(0, 1), from = range(avg_dist_vuln_km,    na.rm = TRUE)),
    priority_score = 0.45 * z_pct + 0.35 * z_popfar + 0.20 * z_dist
  ) %>%
  dplyr::arrange(dplyr::desc(priority_score)) %>%
  dplyr::slice_head(n = 10)

# --- pretty formatting for table output ---
priority_table <- county_priority %>%
  dplyr::transmute(
    County                        = county_name,
    `Vulnerable Tracts`           = vuln_tracts,
    `Underserved Tracts`          = underserved_tracts,
    `% Underserved (of Vulnerable)` = scales::number(pct_underserved_vuln, accuracy = 0.1),
    `Avg Distance (mi, Vulnerable)` = scales::number(avg_dist_vuln_km * 0.621371, accuracy = 0.1),
    `Vulnerable Pop (total)`      = scales::comma(vuln_pop_total),
    `Vulnerable Pop >15 mi`       = scales::comma(vuln_pop_far),
    `County Pop (total)`          = scales::comma(pop_total_sum),
    `Priority Score`              = scales::number(priority_score, accuracy = 0.001)
  )

# --- render professional table ---
knitr::kable(
  priority_table,
  caption = "Top 10 Priority Counties for Healthcare Investment in Pennsylvania (Composite of % underserved among vulnerable tracts, vulnerable population >15 miles from hospitals, and average distance for vulnerable tracts)."
)



```

**Requirements:**
- Use `knitr::kable()` or similar for formatting
- Include descriptive column names
- Format numbers appropriately (commas for population, percentages, etc.)
- Add an informative caption
- Sort by priority (you decide the metric)

---
## Part 2: Comprehensive Visualization 

Using the skills from Week 3 (Data Visualization), create publication-quality maps and charts.

### Map 1: County-Level Choropleth 

Create a choropleth map showing healthcare access challenges at the county level.

**Your Task:**
```{r}
# Create county-level access map
# 1) Prepare county-level choropleth data: % of vulnerable tracts that are underserved
county_choro <- counties %>%
  dplyr::left_join(
    county_underserved %>% 
      dplyr::select(county_name, pct_underserved, n_vulnerable, n_underserved),
    by = c("NAME" = "county_name")
  )

# 2) Ensure hospitals are in the same CRS as counties
hospitals_plot <- hospitals %>% sf::st_transform(sf::st_crs(counties))

# 3) Map
ggplot() +
  geom_sf(
    data = county_choro,
    aes(fill = pct_underserved),
    color = "white", linewidth = 0.25
  ) +
  geom_sf(
    data = hospitals_plot,
    color = "black", alpha = 0.5, size = 0.6
  ) +
  coord_sf() +
  scale_fill_viridis_c(
    option = "magma",
    na.value = "grey90",
    labels = scales::label_percent(accuracy = 1, scale = 1),
    name = "% Underserved among Vulnerable Tracts"
  ) +
  labs(
    title = "Healthcare Access Challenges in Pennsylvania (County Level)",
    subtitle = "Percent of vulnerable census tracts located >15 miles from the nearest hospital; dots show hospital locations",
    caption = "Sources: TIGER/Line (tigris), ACS 5-year (tidycensus), OpenStreetMap (osmdata). Projection: EPSG:5070 (meters)."
  ) +
  theme_void(base_size = 12) +
  theme(
    legend.position = "right",
    legend.title = element_text(face = "bold"),
    plot.title = element_text(face = "bold"),
    plot.caption = element_text(color = "grey30")
  )



```

**Requirements:**
- Fill counties by percentage of vulnerable tracts that are underserved
- Include hospital locations as points
- Use an appropriate color scheme
- Include clear title, subtitle, and caption
- Use `theme_void()` or similar clean theme
- Add a legend with formatted labels

---

### Map 2: Detailed Vulnerability Map 

Create a map highlighting underserved vulnerable tracts.

**Your Task:**
```{r}
# Create detailed tract-level map
# Ensure common CRS
crs_use <- sf::st_crs(counties)
tracts_plot    <- tracts_attr %>% sf::st_transform(crs_use)
counties_plot  <- counties    %>% sf::st_transform(crs_use)
hospitals_plot <- hospitals   %>% sf::st_transform(crs_use)

# Class for visual hierarchy
tracts_plot <- tracts_plot %>%
  dplyr::mutate(
    vuln_class = dplyr::case_when(
      underserved ~ "Underserved vulnerable",
      vulnerable  ~ "Other vulnerable",
      TRUE        ~ "Other tracts"
    ),
    vuln_class = factor(vuln_class,
                        levels = c("Underserved vulnerable","Other vulnerable","Other tracts"))
  )

ggplot() +
  # base: all tracts (very light)
  geom_sf(data = tracts_plot %>% dplyr::filter(vuln_class == "Other tracts"),
          aes(fill = vuln_class), color = NA, alpha = 0.4) +
  # vulnerable but not underserved (mid emphasis)
  geom_sf(data = tracts_plot %>% dplyr::filter(vuln_class == "Other vulnerable"),
          aes(fill = vuln_class), color = NA, alpha = 0.7) +
  # highlight: underserved vulnerable (strong emphasis)
  geom_sf(data = tracts_plot %>% dplyr::filter(vuln_class == "Underserved vulnerable"),
          aes(fill = vuln_class), color = "white", linewidth = 0.1) +
  # county outlines for context
  geom_sf(data = sf::st_union(counties_plot), fill = NA, color = "white", linewidth = 0.4) +
  # hospitals as points
  geom_sf(data = hospitals_plot, color = "black", alpha = 0.7, size = 0.6) +
  coord_sf() +
  scale_fill_manual(
    name = NULL,
    values = c("Underserved vulnerable" = "#C51B7D",   # magenta/red -> strongest contrast
               "Other vulnerable"       = "#FDB863",   # amber
               "Other tracts"           = "#E6E6E6")   # light gray
  ) +
  labs(
    title = "Underserved Vulnerable Tracts in Pennsylvania",
    subtitle = "Tracts meeting low-income & high-elderly criteria and located >15 miles from the nearest hospital",
    caption = "Sources: TIGER/Line (tigris), ACS 5-year (tidycensus), OpenStreetMap (osmdata). Projection: EPSG:5070."
  ) +
  theme_void(base_size = 12) +
  theme(
    legend.position = "right",
    plot.title = element_text(face = "bold"),
    plot.caption = element_text(color = "grey30")
  )



```

**Requirements:**
- Show underserved vulnerable tracts in a contrasting color
- Include county boundaries for context
- Show hospital locations
- Use appropriate visual hierarchy (what should stand out?)
- Include informative title and subtitle

---

### Chart: Distribution Analysis

Create a visualization showing the distribution of distances to hospitals for vulnerable populations.

**Your Task:**
```{r}
# Create distribution visualization

# Ensure distance in miles is available
tracts_attr <- tracts_attr %>%
  dplyr::mutate(dist_hosp_miles = dist_hosp_km * 0.621371)

# 1) Histogram (vulnerable tracts only)
p_hist <- tracts_attr %>%
  dplyr::filter(vulnerable) %>%
  ggplot(aes(x = dist_hosp_miles)) +
  geom_histogram(bins = 40, alpha = 0.9) +
  geom_vline(xintercept = 15, linetype = "dashed") +
  labs(
    title = "Distance to Nearest Hospital (Vulnerable Tracts)",
    x = "Distance (miles)",
    y = "Count",
    subtitle = "Dashed line marks 15 miles threshold",
    caption = "Most vulnerable tracts are within 10–15 miles; a long right tail captures rural outliers."
  ) +
  theme_minimal(base_size = 12)

# 2) Box plot: vulnerable vs. other tracts
p_box <- tracts_attr %>%
  dplyr::mutate(vuln_flag = dplyr::if_else(vulnerable, "Vulnerable", "Other")) %>%
  ggplot(aes(x = vuln_flag, y = dist_hosp_miles)) +
  geom_boxplot(outlier.alpha = 0.4) +
  labs(
    title = "Distances by Vulnerability Status",
    x = NULL,
    y = "Distance to nearest hospital (miles)",
    caption = "Vulnerable tracts tend to have slightly longer distances with more extreme outliers."
  ) +
  theme_minimal(base_size = 12)

# 3) Bar chart: top counties by underserved tracts
# Use county_underserved if already created; otherwise compute from tracts_in_cnty_num
if (!exists("county_underserved")) {
  county_underserved <- tracts_in_cnty_num %>%
    sf::st_drop_geometry() %>%
    dplyr::group_by(county_name) %>%
    dplyr::summarise(
      n_underserved = sum(underserved, na.rm = TRUE),
      .groups = "drop"
    ) %>%
    dplyr::arrange(dplyr::desc(n_underserved))
}

top_counties_underserved <- county_underserved %>%
  dplyr::slice_max(n_underserved, n = 15) %>%
  dplyr::arrange(n_underserved)

p_bar <- ggplot(top_counties_underserved,
                aes(x = reorder(county_name, n_underserved), y = n_underserved)) +
  geom_col() +
  coord_flip() +
  labs(
    title = "Top Counties by Number of Underserved Vulnerable Tracts",
    x = NULL,
    y = "Underserved vulnerable tracts (count)",
    caption = "Counts highlight clusters of access gaps concentrated in select rural counties."
  ) +
  theme_minimal(base_size = 12)

# Print plots (you can arrange with patchwork if desired)
p_hist
p_box
p_bar


```

**Suggested chart types:**
- Histogram or density plot of distances
- Box plot comparing distances across regions
- Bar chart of underserved tracts by county
- Scatter plot of distance vs. vulnerable population size

**Requirements:**
- Clear axes labels with units
- Appropriate title
- Professional formatting
- Brief interpretation (1-2 sentences as a caption or in text)

---

## Part 3: Bring Your Own Data Analysis 

Choose your own additional spatial dataset and conduct a supplementary analysis.

### Challenge Options

Choose ONE of the following challenge exercises, or propose your own research question using OpenDataPhilly data (https://opendataphilly.org/datasets/). 

**Note these are just loose suggestions to spark ideas - follow or make your own as the data permits and as your ideas evolve. This analysis should include bringing in your own dataset, ensuring the projection/CRS of your layers align and are appropriate for the analysis (not lat/long or geodetic coordinate systems). The analysis portion should include some combination of spatial and attribute operations to answer a relatively straightforward question**

---

#### Education & Youth Services

**Option A: Educational Desert Analysis**
- **Data:** Schools, Libraries, Recreation Centers, Census tracts (child population)
- **Question:** "Which neighborhoods lack adequate educational infrastructure for children?"
- **Operations:** Buffer schools/libraries (0.5 mile walking distance), identify coverage gaps, overlay with child population density
- **Policy relevance:** School district planning, library placement, after-school program siting

**Option B: School Safety Zones**
- **Data:** Schools, Crime Incidents, Bike Network
- **Question:** "Are school zones safe for walking/biking, or are they crime hotspots?"
- **Operations:** Buffer schools (1000ft safety zone), spatial join with crime incidents, assess bike infrastructure coverage
- **Policy relevance:** Safe Routes to School programs, crossing guard placement

---

#### Environmental Justice

**Option C: Green Space Equity** 
- **Data:** Parks, Street Trees, Census tracts (race/income demographics)
- **Question:** "Do low-income and minority neighborhoods have equitable access to green space?"
- **Operations:** Buffer parks (10-minute walk = 0.5 mile), calculate tree canopy or park acreage per capita, compare by demographics
- **Policy relevance:** Climate resilience, environmental justice, urban forestry investment
---

#### Public Safety & Justice

**Option D: Crime & Community Resources**
- **Data:** Crime Incidents, Recreation Centers, Libraries, Street Lights
- **Question:** "Are high-crime areas underserved by community resources?"
- **Operations:** Aggregate crime counts to census tracts or neighborhoods, count community resources per area, spatial correlation analysis
- **Policy relevance:** Community investment, violence prevention strategies
---

#### Infrastructure & Services

**Option E: Polling Place Accessibility**
- **Data:** Polling Places, SEPTA stops, Census tracts (elderly population, disability rates)
- **Question:** "Are polling places accessible for elderly and disabled voters?"
- **Operations:** Buffer polling places and transit stops, identify vulnerable populations, find areas lacking access
- **Policy relevance:** Voting rights, election infrastructure, ADA compliance

---

#### Health & Wellness

**Option F: Recreation & Population Health**
- **Data:** Recreation Centers, Playgrounds, Parks, Census tracts (demographics)
- **Question:** "Is lack of recreation access associated with vulnerable populations?"
- **Operations:** Calculate recreation facilities per capita by neighborhood, buffer facilities for walking access, overlay with demographic indicators
- **Policy relevance:** Public health investment, recreation programming, obesity prevention

---

#### Emergency Services

**Option G: EMS Response Coverage**
- **Data:** Fire Stations, EMS stations, Population density, High-rise buildings
- **Question:** "Are population-dense areas adequately covered by emergency services?"
- **Operations:** Create service area buffers (5-minute drive = ~2 miles), assess population coverage, identify gaps in high-density areas
- **Policy relevance:** Emergency preparedness, station siting decisions

---

#### Arts & Culture

**Option H: Cultural Asset Distribution**
- **Data:** Public Art, Museums, Historic sites/markers, Neighborhoods
- **Question:** "Do all neighborhoods have equitable access to cultural amenities?"
- **Operations:** Count cultural assets per neighborhood, normalize by population, compare distribution across demographic groups
- **Policy relevance:** Cultural equity, tourism, quality of life, neighborhood identity

---

### Data Sources

**OpenDataPhilly:** https://opendataphilly.org/datasets/
- Most datasets available as GeoJSON, Shapefile, or CSV with coordinates
- Always check the Metadata for a data dictionary of the fields.

**Additional Sources:**
- **Pennsylvania Open Data:** https://data.pa.gov/
- **Census Bureau (via tidycensus):** Demographics, economic indicators, commute patterns
- **TIGER/Line (via tigris):** Geographic boundaries

### Recommended Starting Points

**If you're feeling confident:** Choose an advanced challenge with multiple data layers. 
**If you are a beginner, choose something more manageable that helps you understand the basics**


**If you have a different idea:** Propose your own question! Just make sure:
- You can access the spatial data
- You can perform at least 2 spatial operations

### Your Analysis

**Your Task:**

1. **Find and load additional data**
   - Document your data source
   - Check and standardize the CRS
   - Provide basic summary statistics

```{r}
library(sf)
library(dplyr)
# Load your additional dataset
housing_raw <- st_read("Affordable_Housing/Affordable_Housing.shp", quiet = TRUE)
n_features <- nrow(housing_raw)
crs_info <- st_crs(housing_raw)
cat("Number of features:", n_features, "\n")
cat("Original CRS:", crs_info$input, "\n")

#Transform CRS to match project CRS (UTM 18N; EPSG:26918) ----
analysis_crs <- 26918
housing <- st_transform(housing_raw, analysis_crs)
cat("Transformed CRS:", st_crs(housing)$input, "\n")

#Basic summary statistics ----
summary(select(st_drop_geometry(housing), contains("YEAR"), contains("STATUS"), contains("ADDRESS")))

```

**Questions to answer:**
- What dataset did you choose and why?I selected the Affordable Housing Production dataset because it aligns closely with the healthcare‐equity theme of Assignment 2. It allows me to analyze whether affordable housing projects are spatially located near essential public facilities such as hospitals or transit, providing insight into urban equity and accessibility.
- What is the data source and date?The dataset comes from OpenDataPhilly
, maintained by the Philadelphia Division of Housing and Community Development (DHCD).
It contains projects completed since 1994 and was last updated in 2024.
- How many features does it contain?443
- What CRS is it in? Did you need to transform it?WGS 84 / Pseudo-Mercator ,EPSG:26918 

---

2. **Pose a research question**

Write a clear research statement that your analysis will answer.

Research Question:
"Are Philadelphia’s affordable housing developments equitably located relative to hospital access?"
Rationale:
Access to healthcare is a critical component of urban livability, particularly for residents of
affordable housing. By examining the spatial relationship between affordable housing projects
and hospital service areas, this analysis aims to evaluate whether low-income populations have
adequate proximity to essential healthcare facilities.
Policy Relevance:
Findings can inform city planning and equitable investment strategies for both housing and
healthcare infrastructure, highlighting neighborhoods where affordable housing expansion should
be paired with improved health service accessibility.

---

3. **Conduct spatial analysis**

Use at least TWO spatial operations to answer your research question.

**Required operations (choose 2+):**
- Buffers
- Spatial joins
- Spatial filtering with predicates
- Distance calculations
- Intersections or unions
- Point-in-polygon aggregation

**Your Task:**
```{r}
# Your spatial analysis


```

**Analysis requirements:**
- Clear code comments explaining each step
- Appropriate CRS transformations
- Summary statistics or counts
- At least one map showing your findings
- Brief interpretation of results (3-5 sentences)

**Your interpretation:**

[Write your findings here]


## Finally - A few comments about your incorporation of feedback!
Take a few moments to clean up your markdown document and then write a line or two or three about how you may have incorporated feedback that you recieved after your first assignment. 

---

## Submission Requirements

**What to submit:**

1. **Rendered HTML document posted to your course portfolio** with all code, outputs, maps, and text
   - Use `embed-resources: true` in YAML so it's a single file
   - All code should run without errors
   - All maps and charts should display correctly

**File naming:** `LastName_FirstName_Assignment2.html` and `LastName_FirstName_Assignment2.qmd`

---
