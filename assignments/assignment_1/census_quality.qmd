---
title: "Assignment 1: Census Data Quality for Policy Decisions"
subtitle: "Evaluating Data Reliability for Algorithmic Decision-Making"
author: "Zicheng Xiang"
date: "9.21"
format: 
  html:
    code-fold: false
    toc: true
    toc-location: left
    theme: cosmo
execute:
  warning: false
  message: false
---

# Setup

```{r setup}
# Load packages
library(tidycensus)
library(tidyverse)
library(knitr)

#census_api_key("c45ccb372bc48b576b618d3e5e3f1351d741c281", install = TRUE)

my_state <- "Pennsylvania"
```
Question: Why are we using ACS 5-year estimates here instead of 1-year?
Your answer: [We use ACS 5-year estimates instead of 1-year estimates because they are available for all geographic areas, including small counties and census tracts, and they provide more reliable statistics by combining five years of data. In contrast, 1-year estimates are only published for areas with populations of 65,000 or more and have higher margins of error.]

# 1.County_Level_Resource_Assessment
```{r County_Level_Resource_Assessment}
# 1.County-Level Resource Assessment
  # Data Retrieval
county_data <- get_acs(
  geography = "county",
  state = my_state,
  variables = c(median_income = "B19013_001",
                total_pop     = "B01003_001"),
  year = 2022,
  survey = "acs5",
  output = "wide"
) %>%
  # Clean county names: remove " County, ST"
  mutate(NAME = str_remove(NAME, " County,.*"))

  # Peek at the data
nrow(county_data)

head(county_data)
```
Questions to answer:

How many counties were returned for your state?

What does the E and M suffix mean in median_incomeE and median_incomeM?

Your answers:

Number of counties: [67]

E vs M: [In ACS data, the suffix E stands for the estimate, and M stands for the margin of error associated with that estimate.]
```{r}
  # Data Quality Assessment
county_quality <- county_data %>%
  mutate(
    moe_pct = (median_incomeM / median_incomeE) * 100,
    reliability = case_when(
      moe_pct < 5 ~ "High Confidence",
      moe_pct < 10 ~ "Moderate Confidence",
      TRUE ~ "Low Confidence"
    ),
    unreliable = moe_pct >= 10  # flag for low confidence
  )

reliability_summary <- county_quality %>%
  count(reliability) %>%
  mutate(percent = round(n / sum(n) * 100, 1))

reliability_summary
```
Question: What proportion of counties fall into Low Confidence?
Your answer: [0%]
```{r}
  # High Uncertainty Counties
top5_uncertainty <- county_quality %>%
  arrange(desc(moe_pct)) %>%
  slice(1:5) %>%
  select(
    county = NAME,
    median_income = median_incomeE,
    income_moe = median_incomeM,
    moe_pct,
    reliability
  )

kable(top5_uncertainty, caption = "Top 5 Counties by Median Income MOE% (Highest First)")
```
Short commentary (2–3 sentences):
[Counties with the highest margins of error in median income estimates are more uncertain, and their rankings may shift substantially if true values differ from the estimates. If an algorithm sorts or allocates resources based only on the reported income, these counties could be misclassified, leading to potential misallocation of funding or support. This highlights the importance of incorporating data reliability into policy decisions.]

# 2.Neighborhood_Level_Analysis
```{r Neighborhood_Level_Analysis}
# Neighborhood-Level Analysis
  # Select Focus Counties
focus_counties <- c("Chester", "Bucks", "Montgomery", "Delaware", "Lancaster", "SomeCounty")  

selected_counties <- county_quality %>%
  filter(NAME %in% focus_counties) %>%
  select(NAME, median_incomeE, moe_pct, reliability)

selected_counties
```
Question: Why did you pick these counties?
Your answer: [I picked these counties because, according to publicly available data, they have the highest median household incomes in Pennsylvania, which makes them the strongest economically.]
```{r}
  # Tract-Level Demographics
race_vars <- c(
  total    = "B03002_001",
  white    = "B03002_003",
  black    = "B03002_004",
  hispanic = "B03002_012"
)

tract_data <- get_acs(
  geography = "tract",
  state = my_state,
  county = selected_counties$NAME,
  variables = race_vars,
  year = 2022,
  survey = "acs5",
  output = "wide"
) %>%
  mutate(
    pct_white    = whiteE    / totalE * 100,
    pct_black    = blackE    / totalE * 100,
    pct_hispanic = hispanicE / totalE * 100
  )

head(tract_data)

  # Demographic Analysis
    # Highest pct_hispanic tract
highest_hispanic_tract <- tract_data %>%
  arrange(desc(pct_hispanic)) %>%
  slice(1) %>%
  select(NAME, GEOID, pct_hispanic, pct_white, pct_black)

highest_hispanic_tract

    # County averages
county_avg_demo <- tract_data %>%
  group_by(NAME) %>%
  summarise(
    n_tracts     = n(),
    avg_white    = mean(pct_white,    na.rm = TRUE),
    avg_black    = mean(pct_black,    na.rm = TRUE),
    avg_hispanic = mean(pct_hispanic, na.rm = TRUE)
  )

kable(county_avg_demo, caption = "Average Tract Demographics by County")
```
Question: Which county shows the highest average pct_hispanic?
Your answer: [Delaware County shows the highest average pct_hispanic among the selected counties.]

# 3.Comprehensive_Data_Quality_Evaluation
```{r Comprehensive_Data_Quality_Evaluation}
# 3.Comprehensive Data Quality Evaluation
  # MOE% for Demographics
tract_quality <- tract_data %>%
  mutate(
    moe_white_pct    = (whiteM    / whiteE)    * 100,
    moe_black_pct    = (blackM    / blackE)    * 100,
    moe_hispanic_pct = (hispanicM / hispanicE) * 100,
    high_moe_any = (moe_white_pct > 15) | (moe_black_pct > 15) | (moe_hispanic_pct > 15)
  )
# 计算 share
share_high_moe <- tract_quality %>%
  summarise(
    total_tracts = n(),
    high_moe     = sum(high_moe_any, na.rm = TRUE),
    share        = round(high_moe / total_tracts * 100, 1)
  )

share_high_moe

```
Question: Roughly what share of tracts have any demographic MOE% > 15?
Your answer: [Roughly 100% of tracts have at least one demographic MOE% greater than 15]
```{r}
# How many tracts have any high MOE?
tract_quality %>% count(high_moe_any)

  # Pattern Check
moe_pattern <- tract_quality %>%
  group_by(high_moe_any) %>%
  summarise(
    avg_pop      = mean(totalE, na.rm = TRUE),
    avg_white    = mean(pct_white, na.rm = TRUE),
    avg_black    = mean(pct_black, na.rm = TRUE),
    avg_hispanic = mean(pct_hispanic, na.rm = TRUE),
    n = n()
  )

kable(moe_pattern, caption = "Comparison of Tracts by High-MOE Flag")
```
Short commentary (2–3 sentences):
[Smaller-population tracts are more likely to have high MOE. These tracts also tend to show greater racial and ethnic diversity.]

# 4.Policy Recommendations
```{r Policy_Recommendations}
# 4.Policy Recommendations
  # Decision Framework Table
decision_table <- county_quality %>%
  select(county = NAME, median_incomeE, moe_pct, reliability) %>%
  mutate(
    recommendation = case_when(
      reliability == "High Confidence"     ~ "Safe for algorithmic decisions",
      reliability == "Moderate Confidence" ~ "Use with caution - monitor outcomes",
      reliability == "Low Confidence"      ~ "Requires manual review or additional data"
    )
  )
kable(decision_table, caption = "County-Level Decision Framework")

```

Follow-up lists (bulleted is fine):

Immediate algorithm use (High): [57 counties — about 85% of Pennsylvania counties fall into the “High Confidence” category, so their median income estimates are safe for algorithmic decisions.]

Needs monitoring (Moderate): [10 counties — about 15% of counties are “Moderate Confidence” and require monitoring when used in decision-making.]

Alt approach / manual review (Low): [0 counties — none fell into the “Low Confidence” category in this dataset, so no counties require manual review.]


